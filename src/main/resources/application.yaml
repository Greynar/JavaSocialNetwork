server:
  port: 9000

spring:
  main:
    allow-circular-references: true # without that cannot start spring shell
    allow-bean-definition-overriding: true

  profiles:
    active: dev

  application:
    name: Java-social

  datasource:
    url: &dbUrl jdbc:mysql://localhost:3306/javaSocial
    username: user
    password: password
    driverClassName: com.mysql.cj.jdbc.Driver

  jpa:
    generate-ddl: false
    hibernate:
      #validate: validate the schema, makes no changes to the database.
      #update: update the schema.
      #create: creates the schema, destroying previous data.
      #create-drop: drop the schema at the end of the session
      #none: is all other cases.
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        default_schema: javaSocial
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
  liquibase:
    change-log: 'classpath:db/migrations/changeLog.xml'

  session:
    jdbc:
      initialize-schema: always
      table-name: SPRING_SESSION
#      schema: classpath:session_tables.sql

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 107934904337-rin7lgbfh3h8dfdut5se9i49vn7mp3f5.apps.googleusercontent.com
            clientSecret: ${clientSecret}
            accessTokenUri: https://www.googleapis.com/oauth2/v4/token
            userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
            clientAuthenticationScheme: form
            scope:
              - openid
              - email
              - profile
      resource:
        userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
        preferTokenInfo: true